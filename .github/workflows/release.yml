name: Release and Deploy

on:
  push:
    branches:
      - main

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: node
          package-name: shadegame
          
    # The following steps will only run if a new release was created
    # - uses: actions/checkout@v3
    #   if: ${{ steps.release.outputs.release_created }}
      
    # - uses: actions/setup-node@v3
    #   with:
    #     node-version: '16'
    #   if: ${{ steps.release.outputs.release_created }}
      
    # - run: npm ci
    #   if: ${{ steps.release.outputs.release_created }}
      
    # - run: npm test
    #   if: ${{ steps.release.outputs.release_created }}

    # Vercel deployment steps (commented out)
    # - name: Install Vercel CLI
    #   run: npm install --global vercel@latest
    #   if: ${{ steps.release.outputs.release_created }}
    
    # - name: Pull Vercel Environment Information
    #   run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
    #   if: ${{ steps.release.outputs.release_created }}
    
    # - name: Build Project Artifacts
    #   run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
    #   if: ${{ steps.release.outputs.release_created }}
    
    # - name: Deploy Project Artifacts to Vercel
    #   run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
    #   if: ${{ steps.release.outputs.release_created }}

  # Optional: Add a separate job for preview deployments
  # preview-deploy:
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'pull_request'
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Install Vercel CLI
  #       run: npm install --global vercel@latest
  #     - name: Pull Vercel Environment Information
  #       run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
  #     - name: Build Project Artifacts
  #       run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
  #     - name: Deploy Project Artifacts to Vercel
  #       run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}